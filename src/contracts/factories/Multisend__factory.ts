/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { Multisend, MultisendInterface } from "../Multisend";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "sendBERA",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "sendToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class Multisend__factory {
  static readonly abi = _abi;
  static createInterface(): MultisendInterface {
    return new Interface(_abi) as MultisendInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Multisend {
    return new Contract(address, _abi, runner) as unknown as Multisend;
  }
}
